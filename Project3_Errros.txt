Maze.java:46: error: cannot find symbol
    return randOccupants.get(i);
                             ^
  symbol:   variable i
  location: class Maze

Maze.java:85: error: cannot find symbol
      if(foundAllTreasures == true)
         ^
  symbol:   variable foundAllTreasures
  location: class Maze
Maze.java:114: error: incomparable types: RandomOccupant and boolean
          if(randOccupants.get(i) != true)
                                  ^
Maze.java:139: error: walls has private access in Square
      if(u.walls[2] == false)
          ^
Maze.java:141: error: walls has private access in Square
      if(r.walls[3] == false)
          ^
Maze.java:143: error: walls has private access in Square
      if(d.walls[0] == false)
          ^
Maze.java:145: error: walls has private access in Square
      if(l.walls[1] == false)
          ^
Maze.java:152: error: walls has private access in Square
      if(uld.walls[1] == false || uld.walls[2] == false)
            ^
Maze.java:152: error: walls has private access in Square
      if(uld.walls[1] == false || uld.walls[2] == false)
                                     ^
Maze.java:154: error: walls has private access in Square
      if(urd.walls[3] == false || urd.walls[2] == false)
            ^
Maze.java:154: error: walls has private access in Square
      if(urd.walls[3] == false || urd.walls[2] == false)
                                     ^
Maze.java:156: error: walls has private access in Square
      if(dld.walls[1] == false || dld.walls[0] == false)
            ^
Maze.java:156: error: walls has private access in Square
      if(dld.walls[1] == false || dld.walls[0] == false)
                                     ^
Maze.java:158: error: walls has private access in Square
      if(drd.walls[3] == false || drd.walls[0] == false)
            ^
Maze.java:158: error: walls has private access in Square
      if(drd.walls[3] == false || drd.walls[0] == false)
                                     ^
RandomOccupant.java:78: error: cannot find symbol
                                        if(walls[d] == false)
                                           ^
  symbol:   variable walls
  location: class RandomOccupant
RandomOccupant.java:82: error: method moveTo in class Occupant cannot be applied to given types;
                                                this.moveTo(r,c);
                                                    ^
  required: Square
  found: int,int
  reason: actual and formal argument lists differ in length
RandomOccupant.java:87: error: cannot find symbol
                                        if(walls[d] == false)
                                           ^
  symbol:   variable walls
  location: class RandomOccupant
RandomOccupant.java:91: error: method moveTo in class Occupant cannot be applied to given types;
                                                this.moveTo(r,c);
                                                    ^
  required: Square
  found: int,int
  reason: actual and formal argument lists differ in length
RandomOccupant.java:96: error: cannot find symbol
                                if(walls[d] == false)
                                   ^
  symbol:   variable walls
  location: class RandomOccupant
RandomOccupant.java:100: error: method moveTo in class Occupant cannot be applied to given types;
                                        this.moveTo(r,c);
                                            ^
  required: Square
  found: int,int
  reason: actual and formal argument lists differ in length
RandomOccupant.java:105: error: cannot find symbol
                                if(walls[d] == false)
                                   ^
  symbol:   variable walls
  location: class RandomOccupant
RandomOccupant.java:109: error: method moveTo in class Occupant cannot be applied to given types;
                                        this.moveTo(r,c);
                                            ^
  required: Square
  found: int,int
  reason: actual and formal argument lists differ in length
Explorer.java:122: error: cannot find symbol
                s.enter();
                 ^
  symbol:   method enter()
  location: variable s of type Square
Treasure.java:15: error: no suitable constructor found for RandomOccupant()
        {
        ^
    constructor RandomOccupant.RandomOccupant(Maze,Square) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze) is not applicable
      (actual and formal argument lists differ in length)
Treasure.java:16: error: cannot find symbol
                Random rand = new Random();
                ^
  symbol:   class Random
  location: class Treasure
Treasure.java:16: error: cannot find symbol
                Random rand = new Random();
                                  ^
  symbol:   class Random
  location: class Treasure
Treasure.java:17: error: m has private access in RandomOccupant
                m = maze; 
                ^
Treasure.java:28: error: no suitable constructor found for RandomOccupant()
        {
        ^
    constructor RandomOccupant.RandomOccupant(Maze,Square) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze) is not applicable
      (actual and formal argument lists differ in length)
Treasure.java:29: error: cannot find symbol
                Random rand = new Random();
                ^
  symbol:   class Random
  location: class Treasure
Treasure.java:29: error: cannot find symbol
                Random rand = new Random();
                                  ^
  symbol:   class Random
  location: class Treasure
Treasure.java:30: error: m has private access in RandomOccupant
                m = maze; 
                ^
Treasure.java:32: error: m has private access in RandomOccupant
                int rows = m.rows();
                           ^
Treasure.java:33: error: m has private access in RandomOccupant
                int cols = m.cols();
                           ^
Treasure.java:42: error: no suitable constructor found for RandomOccupant()
        {
        ^
    constructor RandomOccupant.RandomOccupant(Maze,Square) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze,long) is not applicable
      (actual and formal argument lists differ in length)
    constructor RandomOccupant.RandomOccupant(Maze) is not applicable
      (actual and formal argument lists differ in length)
Treasure.java:43: error: m has private access in RandomOccupant
                m = maze;
                ^
Treasure.java:57: error: cannot find symbol
                Square s = this.location;
                               ^
  symbol: variable location
37 errors
